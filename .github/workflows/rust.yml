name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          #- macOS-latest
          #- ubuntu-latest

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
        if: matrix.config.os == 'windows-latest'
        with:
          version: "13.0"
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: matrix.config.os == 'windows-latest'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo update
        run: cargo update --manifest-path ./crates/Cargo.toml

      - name: Detect unused dependencies
        uses: aig787/cargo-udeps-action@v1
        with:
          version: 'latest'
          args: '--all-targets'

      #- name: Run cargo fmt check
      # uses: actions-rs/cargo@v1
      # with:
      #   command: fmt
      #   args: --manifest-path ./crates/Cargo.toml --no-deps -- --check
          
      - name: Run cargo clippy check
        uses: actions-rs/cargo@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: clippy
          args: --manifest-path ./crates/Cargo.toml --no-deps -- -D warnings

      - name: Run cargo build workspace
        uses: actions-rs/cargo@v1
        with:
          command: build 
          args: --manifest-path ./crates/Cargo.toml --release
